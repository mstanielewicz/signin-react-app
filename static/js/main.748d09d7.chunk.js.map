{"version":3,"sources":["context/UserContext.js","components/Header.js","components/Home.js","context/NotificationContext.js","components/Notifications.js","utils/auth.js","components/Signin.js","components/App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useReducer","userStateReducer","user","isAuthenticated","state","dispatch","Provider","value","signin","type","SIGNIN","payload","signout","SIGNOUT","Header","useContext","HeaderWrapper","name","SignoutButton","onClick","SigninButton","to","styled","header","Home","HomeWrapper","div","NotificationContext","NotificationProvider","useState","setState","closeNotification","id","previous","filter","notification","showNotification","setTimeout","createNotification","message","status","Date","now","Notifications","length","NotificationsWrapper","map","NotificationWrapper","key","className","props","authenticate","email","password","Promise","resolve","reject","token","Error","Signin","history","useRouter","loading","setLoading","submit","values","a","push","initialErrors","initialState","initialValues","onSubmit","validationSchema","SigninForm","useFormikContext","errors","touched","FormWrapper","InputWrapper","error","htmlFor","disabled","SubmitButton","Yup","shape","required","min","matches","GlobalStyles","createGlobalStyle","normalize","AppWrapper","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"8yBAEO,IAAMA,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBH,IAAMI,WAAWC,EAAkB,CAC3DC,KAAM,KACNC,iBAAiB,IAHyB,mBACrCC,EADqC,KAC9BC,EAD8B,KAS5C,OACE,kBAACV,EAAYW,SAAb,CAAsBC,MAAK,KAAOH,EAAP,CAAcI,OAJ5B,SAAAN,GAAI,OAAIG,EAAS,CAAEI,KAAMC,EAAQC,QAAS,CAAET,WAIRU,QAHnC,kBAAMP,EAAS,CAAEI,KAAMI,QAIlCd,IAKDE,EAAmB,SAACG,EAAD,GAA+B,IAArBK,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACvC,OAAQF,GACN,KAAKC,EACH,OAAO,EAAP,GAAYN,EAAZ,CAAmBF,KAAMS,EAAQT,KAAMC,iBAAiB,IAC1D,KAAKU,EACH,OAAO,EAAP,GAAYT,EAAZ,CAAmBF,KAAM,KAAMC,iBAAiB,IAClD,QACE,OAAOC,IAIPM,EAAS,SACTG,EAAU,U,iSC1BT,IAAMC,EAAS,WAAO,IAAD,EACiBlB,IAAMmB,WAAWpB,GAApDiB,EADkB,EAClBA,QAASV,EADS,EACTA,KAAMC,EADG,EACHA,gBAEvB,OACE,kBAACa,EAAD,KACE,8BAAOb,EAAe,gBAAYD,EAAKe,KAAjB,KAA2B,kBAChDd,EAAkB,kBAAC,EAAD,CAAeS,QAASA,IAAc,kBAAC,EAAD,QAKzDM,EAAgB,SAAC,GAAD,IAAGN,EAAH,EAAGA,QAAH,OACpB,4BAAQO,QAASP,GAAU,aAGvBQ,EAAe,kBACnB,kBAAC,IAAD,CAAMC,GAAG,WACP,gCAAS,aAIPL,EAAgBM,UAAOC,OAAV,K,oPCtBZ,IAAMC,EAAO,WAAO,IAAD,EACU5B,IAAMmB,WAAWpB,GAA3CO,EADgB,EAChBA,KAAMC,EADU,EACVA,gBAEd,OACE,kBAACsB,EAAD,KACE,4BACGtB,EAAe,kCACeD,EAAKe,KADpB,KAEZ,mDAMNQ,EAAcH,UAAOI,IAAV,K,SCjBJC,EAAsB/B,IAAMC,gBAE5B+B,EAAuB,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAAe,EAC1BH,IAAMiC,SAAS,IADW,mBAC7CzB,EAD6C,KACtC0B,EADsC,KAc9CC,EAAoB,SAAAC,GAAE,OAC1BF,EAAS,SAAAG,GAAQ,OACfA,EAASC,OAAO,SAAAC,GAAY,OAAIA,EAAaH,KAAOA,OAGxD,OACE,kBAACL,EAAoBrB,SAArB,CACEC,MAAO,CAAEH,QAAOgC,iBAZK,SAAAD,GACvBL,EAAS,SAAAG,GAAQ,4BAAQA,GAAR,CAAkBE,MACnCE,WAAW,kBAAMN,EAAkBI,EAAaH,KAAK,MAUjBM,mBAlBX,SAACC,EAASC,GAAV,MAAsB,CAC/CR,GAAIS,KAAKC,MACTH,UACAC,aAiBGzC,I,0fCtBA,IAAM4C,EAAgB,WAAO,IAC1BvC,EAAUR,IAAMmB,WAAWY,GAA3BvB,MAER,OAAqB,IAAjBA,EAAMwC,OACD,KAIP,kBAACC,EAAD,KACGzC,EAAM0C,IAAI,SAAAX,GAAY,OACrB,kBAACY,EAAD,CACEC,IAAKb,EAAaH,GAClBQ,OAAQL,EAAaK,OACrBS,UAAU,gBAETd,EAAaI,aAOlBM,EAAuBvB,UAAOI,IAAV,KAapBqB,EAAsBzB,UAAOI,IAAV,IAMb,SAAAwB,GAAK,MAAsB,YAAjBA,EAAMV,OAAuB,UAAY,WAEpD,SAAAU,GAAK,MAAsB,YAAjBA,EAAMV,OAAuB,UAAY,WACxC,SAAAU,GAAK,MACN,YAAjBA,EAAMV,OAAuB,UAAY,Y,4DClDhCW,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpC,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACb,iBAAVJ,GAAyC,cAAbC,EAC9BhB,WACE,kBACEkB,EAAQ,CACNtC,KAAM,WACNwC,MAAO,sBAEX,KAGFpB,WAAW,kBAAMmB,EAAO,IAAIE,MAAM,2BAA2B,Q,o1BCF5D,IAAMC,EAAS,WAAO,IACnBnD,EAAWZ,IAAMmB,WAAWpB,GAA5Ba,OADkB,EAEuBZ,IAAMmB,WACrDY,GADMS,EAFkB,EAElBA,iBAAkBE,EAFA,EAEAA,mBAGlBsB,EAAYC,MAAZD,QALkB,EAMIhE,IAAMiC,UAAS,GANnB,mBAMnBiC,EANmB,KAMVC,EANU,KAQpBC,EAAM,sCAAG,WAAMC,GAAN,eAAAC,EAAA,qEAEXH,GAAW,GAFA,SAGQZ,EAAac,GAHrB,OAGL/D,EAHK,OAIXM,EAAON,GACPkC,EAAiBE,EAAmB,oBAAqB,YACzDsB,EAAQO,KAAK,KANF,kDAQX/B,EACEE,EAAmB,6BAA8B,UAEnDyB,GAAW,GAXA,wDAAH,sDAeZ,OACE,6BACE,kBAAC,IAAD,CACEK,cAAeC,EACfC,cAAeD,EACfE,SAAUP,EACVQ,iBAAkBA,GAElB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYV,QAASA,QAOzBW,EAAa,SAAC,GAAiB,IAAfX,EAAc,EAAdA,QAAc,EACNY,cAApBC,EAD0B,EAC1BA,OAAQC,EADkB,EAClBA,QAEhB,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAcC,MAAOJ,EAAOvB,OAASwB,EAAQxB,OAC3C,2BAAO4B,QAAQ,SAAf,SACA,kBAAC,IAAD,CAAO/D,KAAK,QAAQe,GAAG,QAAQiD,SAAUnB,IACxCa,EAAOvB,OAASwB,EAAQxB,MACvB,0BAAMH,UAAU,IAAI0B,EAAOvB,OACzB,MAEN,kBAAC0B,EAAD,CAAcC,MAAOJ,EAAOtB,UAAYuB,EAAQvB,UAC9C,2BAAO2B,QAAQ,YAAf,YACA,kBAAC,IAAD,CACE/D,KAAK,WACLe,GAAG,WACHvB,KAAK,WACLwE,SAAUnB,IAEXa,EAAOtB,UAAYuB,EAAQvB,SAC1B,8BAAOsB,EAAOtB,UACZ,MAEN,kBAAC,EAAD,CAAcS,QAASA,MAKvBoB,EAAe,SAAC,GAAD,IAAGpB,EAAH,EAAGA,QAAH,OACnB,4BAAQrD,KAAK,SAASwE,SAAUnB,GAC7BA,EAAU,aAAe,WAIxBO,EAAe,CAAEjB,MAAO,GAAIC,SAAU,IAEtCmB,EAAmBW,WAAaC,MAAM,CAC1ChC,MAAO+B,WACJE,SAAS,sBACTjC,MAAM,uBACTC,SAAU8B,WACPE,SAAS,yBACTC,IAAI,EAAG,gDACPC,QACC,iBACA,wDAEDA,QACC,sCACA,yEAIAV,EAAcvD,UAAOI,IAAV,KAmBXoD,EAAexD,UAAOI,IAAV,IAkBO,SAAAwB,GAAK,OAAKA,EAAM6B,MAAQ,MAAQ,Y,umBChIlD,IAoBDS,GAAeC,4BAAH,KACdC,aAqBEC,GAAarE,UAAOI,IAAV,MClDhBkE,IAASC,OAAO,kBDQG,WACjB,OACE,oCACE,kBAACL,GAAD,MACA,kBAACG,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,QAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWxE,IACjC,kBAAC,QAAD,CAAOuE,KAAK,UAAUC,UAAWrC,UCnB/B,MAASsC,SAASC,eAAe,W","file":"static/js/main.748d09d7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const UserContext = React.createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(userStateReducer, {\n    user: null,\n    isAuthenticated: false\n  });\n\n  const signin = user => dispatch({ type: SIGNIN, payload: { user } });\n  const signout = () => dispatch({ type: SIGNOUT });\n\n  return (\n    <UserContext.Provider value={{ ...state, signin, signout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nconst userStateReducer = (state, { type, payload }) => {\n  switch (type) {\n    case SIGNIN:\n      return { ...state, user: payload.user, isAuthenticated: true };\n    case SIGNOUT:\n      return { ...state, user: null, isAuthenticated: false };\n    default:\n      return state;\n  }\n};\n\nconst SIGNIN = \"SIGNIN\";\nconst SIGNOUT = \"SIGNOUT\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nimport styled from \"styled-components\";\n\nexport const Header = () => {\n  const { signout, user, isAuthenticated } = React.useContext(UserContext);\n\n  return (\n    <HeaderWrapper>\n      <span>{isAuthenticated ? `Hello ${user.name}!` : \"Please sign-in\"}</span>\n      {isAuthenticated ? <SignoutButton signout={signout} /> : <SigninButton />}\n    </HeaderWrapper>\n  );\n};\n\nconst SignoutButton = ({ signout }) => (\n  <button onClick={signout}>{\"Sign-out\"}</button>\n);\n\nconst SigninButton = () => (\n  <Link to=\"/signin\">\n    <button>{\"Sign-in\"}</button>\n  </Link>\n);\n\nconst HeaderWrapper = styled.header`\n  height: 3rem;\n  margin: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 1rem 0;\n  border-bottom: 2px #000083 solid;\n\n  span {\n    font-size: 1.5rem;\n  }\n`;\n","import React from \"react\";\nimport { UserContext } from \"../context/UserContext\";\n\nimport styled from \"styled-components\";\n\nexport const Home = () => {\n  const { user, isAuthenticated } = React.useContext(UserContext);\n\n  return (\n    <HomeWrapper>\n      <h1>\n        {isAuthenticated\n          ? `Now you can use the app ${user.name}!`\n          : \"In order to use the app, you have to sign-in!\"}\n      </h1>\n    </HomeWrapper>\n  );\n};\n\nconst HomeWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4rem;\n\n  h1 {\n    text-align: center;\n    font-size: 4rem;\n    font-weight: 600;\n  }\n`;\n","import React from \"react\";\n\nexport const NotificationContext = React.createContext();\n\nexport const NotificationProvider = ({ children }) => {\n  const [state, setState] = React.useState([]);\n\n  const createNotification = (message, status) => ({\n    id: Date.now(),\n    message,\n    status\n  });\n\n  const showNotification = notification => {\n    setState(previous => [...previous, notification]);\n    setTimeout(() => closeNotification(notification.id), 3000);\n  };\n\n  const closeNotification = id =>\n    setState(previous =>\n      previous.filter(notification => notification.id !== id)\n    );\n\n  return (\n    <NotificationContext.Provider\n      value={{ state, showNotification, createNotification }}\n    >\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { NotificationContext } from \"../context/NotificationContext\";\n\nimport styled from \"styled-components\";\n\nexport const Notifications = () => {\n  const { state } = React.useContext(NotificationContext);\n\n  if (state.length === 0) {\n    return null;\n  }\n\n  return (\n    <NotificationsWrapper>\n      {state.map(notification => (\n        <NotificationWrapper\n          key={notification.id}\n          status={notification.status}\n          className=\"notification\"\n        >\n          {notification.message}\n        </NotificationWrapper>\n      ))}\n    </NotificationsWrapper>\n  );\n};\n\nconst NotificationsWrapper = styled.div`\n  position: absolute;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  max-width: 900px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NotificationWrapper = styled.div`\n  height: 2.5rem;\n  font-size: 1.5rem;\n  padding: 0 2rem;\n  display: flex;\n  align-items: center;\n  border: ${props => (props.status === \"success\" ? \"#155724\" : \"#721c24\")} solid\n    1px;\n  color: ${props => (props.status === \"success\" ? \"#155724\" : \"#721c24\")};\n  background-color: ${props =>\n    props.status === \"success\" ? \"#d4edda\" : \"#f8d7da\"};\n`;\n","export const authenticate = ({ email, password }) => {\n  return new Promise((resolve, reject) => {\n    if (email === \"test@test.pl\" && password === \"Password1\") {\n      setTimeout(\n        () =>\n          resolve({\n            name: \"John Doe\",\n            token: \"Sample JWT Token\"\n          }),\n        2000\n      );\n    } else {\n      setTimeout(() => reject(new Error(\"Authentication failed\")), 2000);\n    }\n  });\n};\n","import { Formik, Form, Field, useFormikContext } from \"formik\";\nimport React from \"react\";\nimport useRouter from \"use-react-router\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"../context/UserContext\";\nimport { NotificationContext } from \"../context/NotificationContext\";\nimport { authenticate } from \"../utils/auth\";\n\nimport styled from \"styled-components\";\n\nexport const Signin = () => {\n  const { signin } = React.useContext(UserContext);\n  const { showNotification, createNotification } = React.useContext(\n    NotificationContext\n  );\n  const { history } = useRouter();\n  const [loading, setLoading] = React.useState(false);\n\n  const submit = async values => {\n    try {\n      setLoading(true);\n      const user = await authenticate(values);\n      signin(user);\n      showNotification(createNotification(\"Login successful!\", \"success\"));\n      history.push(\"/\");\n    } catch {\n      showNotification(\n        createNotification(\"Invalid email or password!\", \"error\")\n      );\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialErrors={initialState}\n        initialValues={initialState}\n        onSubmit={submit}\n        validationSchema={validationSchema}\n      >\n        <Form>\n          <SigninForm loading={loading} />\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nconst SigninForm = ({ loading }) => {\n  const { errors, touched } = useFormikContext();\n\n  return (\n    <FormWrapper>\n      <InputWrapper error={errors.email && touched.email}>\n        <label htmlFor=\"email\">Email</label>\n        <Field name=\"email\" id=\"email\" disabled={loading} />\n        {errors.email && touched.email ? (\n          <span className=\"\">{errors.email}</span>\n        ) : null}\n      </InputWrapper>\n      <InputWrapper error={errors.password && touched.password}>\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          name=\"password\"\n          id=\"password\"\n          type=\"password\"\n          disabled={loading}\n        />\n        {errors.password && touched.password ? (\n          <span>{errors.password}</span>\n        ) : null}\n      </InputWrapper>\n      <SubmitButton loading={loading} />\n    </FormWrapper>\n  );\n};\n\nconst SubmitButton = ({ loading }) => (\n  <button type=\"submit\" disabled={loading}>\n    {loading ? \"Loading...\" : \"Submit\"}\n  </button>\n);\n\nconst initialState = { email: \"\", password: \"\" };\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Email is required!\")\n    .email(\"Email is not valid!\"),\n  password: Yup.string()\n    .required(\"Password is required!\")\n    .min(6, \"Password has to be longer then 6 characters!\")\n    .matches(\n      /^[a-zA-Z0-9]+$/,\n      \"Password can only contain Latin letters and numbers!\"\n    )\n    .matches(\n      /(?=.*?[0-9])(?=.*?[A-Z])(?=.*[a-z])/,\n      \"Password has to contain one uppercase, one lowercase and one digit!\"\n    )\n});\n\nconst FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 1rem;\n  padding: 1rem;\n  border: 2px #000083 solid;\n  border-radius: 1rem;\n\n  @media screen and (min-width: 900px) {\n    margin: 3rem;\n    padding: 3rem;\n  }\n\n  & > * {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  padding: 0.2rem;\n  height: 5rem;\n\n  label {\n    font-size: 1rem;\n  }\n\n  span {\n    margin-top: 5px;\n    font-size: 0.6rem;\n    color: red;\n  }\n\n  input {\n    width: 100%;\n    height: 2.5rem;\n    border: none;\n    border-bottom: 2px ${props => (props.error ? \"red\" : \"#000083\")} solid;\n    background-color: #e9edf6;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (min-width: 900px) {\n    span {\n      font-size: 1rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Header } from \"./Header\";\nimport { Home } from \"./Home\";\nimport { Notifications } from \"./Notifications\";\nimport { Signin } from \"./Signin\";\nimport { UserProvider } from \"../context/UserContext\";\nimport { NotificationProvider } from \"../context/NotificationContext\";\n\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const App = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <AppWrapper>\n        <NotificationProvider>\n          <UserProvider>\n            <Router>\n              <Header />\n              <Notifications />\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/signin\" component={Signin} />\n            </Router>\n          </UserProvider>\n        </NotificationProvider>\n      </AppWrapper>\n    </>\n  );\n};\n\nconst GlobalStyles = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background-color: #e9edf6;\n    font-family: sans-serif;\n    font-size: 10px;\n    color: #000083;\n\n    button {\n      cursor: pointer;\n      text-decoration: none;\n      height: 2.5rem;\n      padding: 0 2rem;\n      font-size: 1.5rem;\n      background: white;\n      border: 2px #000083 solid;\n      \n    }\n  }\n`;\n\nconst AppWrapper = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}